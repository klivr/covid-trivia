{"version":3,"sources":["components/Finish/finish.module.css","components/Question/question.module.css","components/Intro/intro.module.css","styles.module.css","pages/home/home.module.css","utils/array.ts","components/Question/index.tsx","components/Trivia/index.tsx","components/Intro/index.tsx","components/Finish/index.tsx","pages/home/index.tsx","App.tsx","index.tsx"],"names":["module","exports","shuffle","array","sort","Math","random","shuffleArray","i","selectRandomElements","total","selectedQuestions","length","selectedItem","floor","push","splice","correctAnswer","indexQuestion","text","questionId","id","options","onNextQuestion","totalQuestions","sourceLinks","useState","response","setResponse","checked","isCorrect","answer","setAnswer","useEffect","className","styles","question","questionTitle","optionsReadOnly","join","map","value","key","onClick","type","option","selectedOptionCorrect","selectedOptionIncorrect","optionCorrect","selectedOption","nextButton","nextButtonDisabled","link","sourceLink","href","target","rel","title","questionNumber","onTriviaCompleted","currentQuestion","responses","totalCorrect","test","setTest","questions","order","selectedQuestion","Question","onStart","container","top","covid","introButton","foot","onRestart","failedLimit","approvedLimit","urlToShare","encodeURIComponent","replace","String","twitterText","styleResults","failedTest","approvedTest","excellentTest","finishContainer","circleOuter","circleInner","score","restartButton","socialIcons","iconFacebook","iconTwitter","iconWhatsapp","started","completed","trivia","setTrivia","onClickStart","homePage","homePageTitle","Finish","Trivia","Intro","App","Cookies","get","cookies","setCookies","buttonText","location","onAccept","overlay","footer","developedBy","agreement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d1e845a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"finishContainer\":\"finish_finishContainer__3K5qN\",\"top\":\"finish_top__2Wa-w\",\"circleOuter\":\"finish_circleOuter__247sR\",\"circleInner\":\"finish_circleInner__1BLYs\",\"failedTest\":\"finish_failedTest__24-Oj\",\"approvedTest\":\"finish_approvedTest__1ITaa\",\"excellentTest\":\"finish_excellentTest__2sOS-\",\"score\":\"finish_score__1A17i\",\"restartButton\":\"finish_restartButton__2M4_j\",\"foot\":\"finish_foot__35V4I\",\"iconFacebook\":\"finish_iconFacebook__2lsiC\",\"iconTwitter\":\"finish_iconTwitter__C0XM9\",\"iconWhatsapp\":\"finish_iconWhatsapp__1NgC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"question_question__2xGxY\",\"questionNumber\":\"question_questionNumber__1BXe1\",\"questionTitle\":\"question_questionTitle__2oUE4\",\"options\":\"question_options__22m2m\",\"optionsReadOnly\":\"question_optionsReadOnly__2kI-S\",\"option\":\"question_option__1WZ3C\",\"selectedOption\":\"question_selectedOption__3rWBw\",\"selectedOptionCorrect\":\"question_selectedOptionCorrect__1LnZ8\",\"optionCorrect\":\"question_optionCorrect__qsriY\",\"selectedOptionIncorrect\":\"question_selectedOptionIncorrect__3xmYJ\",\"nextButton\":\"question_nextButton__WdJfc\",\"nextButtonDisabled\":\"question_nextButtonDisabled__3abdd\",\"sourceLink\":\"question_sourceLink__2TUCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"intro_container__Rl7du\",\"introButton\":\"intro_introButton__fd7Uq\",\"top\":\"intro_top__13NIz\",\"foot\":\"intro_foot__37Cgl\",\"covid\":\"intro_covid__2rMcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__1NhjB\",\"footer\":\"styles_footer__1Ybc4\",\"developedBy\":\"styles_developedBy__38oii\",\"agreement\":\"styles_agreement__3hl6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePage\":\"home_homePage__Kblpr\",\"homePageTitle\":\"home_homePageTitle__2X1dg\"};","const shuffle = (array: any[]) => {\n  array.sort(() => Math.random() - 0.5);\n};\n\nexport const shuffleArray = (array: any[]) => {\n  for (let i = 0; i < 100; i++) {\n    shuffle(array);\n  }\n  return array;\n};\n\nexport const selectRandomElements = (array: any[], total: number) => {\n  const selectedQuestions = [];\n\n  while (selectedQuestions.length < total) {\n    const selectedItem = Math.floor(Math.random() * array.length);\n    selectedQuestions.push(array[selectedItem]);\n    array.splice(selectedItem, 1);\n  }\n\n  return shuffleArray(selectedQuestions);\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport styles from \"./question.module.css\";\n\ninterface QuestionProps {\n  text: string;\n  options: any[];\n  correctAnswer: number;\n  indexQuestion: number;\n  sourceLinks: any[];\n  id: string;\n  totalQuestions: number;\n  onNextQuestion: (response: number, isisCorrect: boolean) => void;\n}\n\nexport default ({\n  correctAnswer,\n  indexQuestion,\n  text,\n  id: questionId,\n  options,\n  onNextQuestion,\n  totalQuestions,\n  sourceLinks,\n}: QuestionProps) => {\n  const [response, setResponse] = useState<number>(-1);\n  const [answer, setAnswer] = useState({\n    checked: false,\n    isCorrect: false,\n  });\n\n  useEffect(() => {\n    setResponse(-1);\n  }, [questionId]);\n\n  const onClickAnswer = () => {\n    if (answer.checked) {\n      onNextQuestion(response, answer.isCorrect);\n      setAnswer({\n        checked: false,\n        isCorrect: false,\n      });\n    } else {\n      setAnswer({\n        checked: true,\n        isCorrect: response === correctAnswer,\n      });\n    }\n  };\n\n  return (\n    <div className={styles.question}>\n      <h3 className={styles.questionTitle}>{text}</h3>\n\n      <ul className={[styles.options, answer.checked ? styles.optionsReadOnly : \"\"].join(\" \")}>\n        {options.map(({ id, value }: any) => {\n          const onClick = () => setResponse(id);\n          return (\n            <li key={id}>\n              <button\n                onClick={onClick}\n                type=\"button\"\n                className={[\n                  styles.option,\n                  answer.checked && answer.isCorrect && response === id ? styles.selectedOptionCorrect : \"\",\n                  answer.checked && !answer.isCorrect && response === id ? styles.selectedOptionIncorrect : \"\",\n                  answer.checked && !answer.isCorrect && correctAnswer === id ? styles.optionCorrect : \"\",\n                  response === id ? styles.selectedOption : \"\",\n                ].join(\" \")}\n              >\n                {value}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      <button\n        type=\"button\"\n        className={[styles.nextButton, response === -1 ? styles.nextButtonDisabled : \"\"].join(\" \")}\n        onClick={onClickAnswer}\n      >\n        {answer.checked ? \"Siguiente\" : \"Validar\"}\n      </button>\n      <div>\n        {answer.checked &&\n          sourceLinks.map((link) => {\n            return (\n              <a\n                className={styles.sourceLink}\n                href={link.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                key={link.link}\n              >\n                {link.title}\n              </a>\n            );\n          })}\n      </div>\n      <div className={styles.questionNumber}>\n        Pregunta {indexQuestion} / {totalQuestions}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { shuffleArray, selectRandomElements } from \"../../utils/array\";\nimport Question from \"../Question/index\";\n\nimport questions from \"../../data/questions.json\";\n\ninterface TriviaState {\n  currentQuestion: number;\n  responses: number[];\n  selectedQuestions: any[];\n  totalCorrect: number;\n}\n\ninterface TriviaProps {\n  onTriviaCompleted: (totalCorrect: number) => void;\n  totalQuestions: number;\n}\n\nexport default ({ onTriviaCompleted, totalQuestions }: TriviaProps) => {\n  const [test, setTest] = useState<TriviaState>({\n    currentQuestion: 0,\n    selectedQuestions: [],\n    responses: [],\n    totalCorrect: 0,\n  });\n\n  useEffect(() => {\n    if (test.selectedQuestions.length === 0) {\n      setTest({\n        currentQuestion: 0,\n        selectedQuestions: selectRandomElements([...questions.order], totalQuestions),\n        responses: [],\n        totalCorrect: 0,\n      });\n    }\n  }, [test, totalQuestions]);\n\n  const moveNextQuestion = (response: number, isCorrect: boolean) => {\n    if (test.currentQuestion + 1 < totalQuestions) {\n      setTest({\n        ...test,\n        currentQuestion: test.currentQuestion + 1,\n        responses: [...test.responses, response],\n        totalCorrect: test.totalCorrect + (isCorrect ? 1 : 0),\n      });\n    } else {\n      onTriviaCompleted(test.totalCorrect + (isCorrect ? 1 : 0));\n      setTest({\n        currentQuestion: 0,\n        selectedQuestions: [],\n        responses: [],\n        totalCorrect: 0,\n      });\n    }\n  };\n\n  const { currentQuestion, selectedQuestions } = test;\n  const selectedQuestion = (questions as any)[selectedQuestions[currentQuestion]];\n\n  return selectedQuestions.length ? (\n    <Question\n      id={selectedQuestion.id}\n      text={selectedQuestion.question}\n      correctAnswer={selectedQuestion.correctAnswer}\n      indexQuestion={currentQuestion + 1}\n      sourceLinks={selectedQuestion.sourceLinks}\n      onNextQuestion={moveNextQuestion}\n      options={shuffleArray(selectedQuestion.options)}\n      totalQuestions={totalQuestions}\n    />\n  ) : (\n    <div>Cargando</div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./intro.module.css\";\n\ninterface IntroProps {\n  onStart: () => void;\n}\nexport default ({ onStart }: IntroProps) => (\n  <div className={styles.container}>\n    <p className={styles.top}>Con este juego queremos que aprendas todo acerca del COVID19.</p>\n\n    <i className={styles.covid} />\n\n    <button className={styles.introButton} type=\"button\" onClick={onStart}>\n      Jugá &amp; Aprendé\n    </button>\n\n    <p className={styles.foot}>\n      La información fue recolectada de diferentes sitios web, e intentaremos incluir siempre la fuente para que puedas\n      chequear por tu cuenta.\n    </p>\n  </div>\n);\n","import React from \"react\";\n\nimport styles from \"./finish.module.css\";\n\nconst SHARE_URL_BASE = \"https://covid-trivia.klivr.com/share_pages/%CORRECT_ANSWERS%.html\";\nconst SHARE_TWITTER_TEXT = \"Yo contesté bien %CORRECT_ANSWERS%, y aprendí mucho sobre COVID19. Jugá y aprendé!\";\n\ninterface FinishProps {\n  onRestart: () => void;\n  totalCorrect: number;\n  totalQuestions: number;\n}\nexport default ({ onRestart, totalCorrect, totalQuestions }: FinishProps) => {\n  const failedLimit = Math.floor(totalQuestions / 3);\n  const approvedLimit = totalQuestions - 1;\n  const urlToShare = encodeURIComponent(SHARE_URL_BASE.replace(\"%CORRECT_ANSWERS%\", String(totalCorrect)));\n  const twitterText = encodeURIComponent(SHARE_TWITTER_TEXT.replace(\"%CORRECT_ANSWERS%\", String(totalCorrect)));\n\n  const styleResults =\n    totalCorrect <= failedLimit\n      ? styles.failedTest\n      : (totalCorrect <= approvedLimit && styles.approvedTest) || styles.excellentTest;\n\n  return (\n    <div className={styles.finishContainer}>\n      <p className={styles.top}>Felicidades por completar la trivia</p>\n\n      <div className={[styles.circleOuter, styleResults].join(\" \")}>\n        <div className={styles.circleInner}>\n          <p>Has contestado bien</p>\n          <p className={styles.score}>{totalCorrect}</p>\n          <p>preguntas</p>\n        </div>\n      </div>\n      <button className={styles.restartButton} type=\"button\" onClick={onRestart}>\n        Seguir aprendiendo\n      </button>\n\n      <p className={styles.foot}>Compartí tus resultados en:</p>\n      <div className={styles.socialIcons}>\n        <a href={`https://facebook.com/sharer/sharer.php?u=${urlToShare}`} target=\"_blank noreferrer\" rel=\"noopener\">\n          <i className={styles.iconFacebook} />\n        </a>\n        <a\n          href={`https://twitter.com/intent/tweet/?text=${twitterText}&amp;url=${urlToShare}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className={styles.iconTwitter} />\n        </a>\n        <a href={`whatsapp://send?text=${twitterText}%20${urlToShare}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className={styles.iconWhatsapp} />\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport Trivia from \"../../components/Trivia\";\n\nimport styles from \"./home.module.css\";\nimport Intro from \"../../components/Intro\";\nimport Finish from \"../../components/Finish\";\n\nconst TOTAL_QUESTIONS = 14;\nexport default () => {\n  const [trivia, setTrivia] = useState({\n    started: false,\n    completed: false,\n    totalCorrect: 8,\n  });\n\n  const onClickStart = () => {\n    setTrivia({\n      started: true,\n      completed: false,\n      totalCorrect: 0,\n    });\n  };\n\n  const onTriviaCompleted = (totalCorrect: number) => {\n    setTrivia({\n      started: true,\n      completed: true,\n      totalCorrect,\n    });\n  };\n\n  return (\n    <div className={styles.homePage}>\n      <h1 className={styles.homePageTitle}>Covid Trivia</h1>\n      {(trivia.started &&\n        (!trivia.completed ? (\n          <Trivia onTriviaCompleted={onTriviaCompleted} totalQuestions={TOTAL_QUESTIONS} />\n        ) : (\n          <Finish onRestart={onClickStart} totalCorrect={trivia.totalCorrect} totalQuestions={TOTAL_QUESTIONS} />\n        ))) || <Intro onStart={onClickStart} />}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport CookieConsent, { Cookies } from \"react-cookie-consent\";\n\nimport HomePage from \"./pages/home\";\n\nimport styles from \"./styles.module.css\";\n\nconst App: React.FC = () => {\n  const [cookies, setCookies] = useState(!!Cookies.get(\"CookieConsent\"));\n  return (\n    <>\n      <CookieConsent\n        buttonText=\"Seguir navegando!\"\n        location=\"bottom\"\n        onAccept={() => {\n          setCookies(true);\n        }}\n      >\n        Este sitio web utiliza cookies para optimizar la experiencia de usuario.\n      </CookieConsent>\n\n      {!cookies && <div className={styles.overlay} />}\n      <HomePage />\n      <div className={styles.footer}>\n        <p className={styles.developedBy}>\n          Desarrollado por{\" \"}\n          <a href=\"https://www.klivr.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Klivr.com\n          </a>\n        </p>\n        <p className={styles.agreement}>\n          El uso del sitio es gratuito. No almacenamos ni pedimos datos personales. <br />\n          No nos hacemos responsables si alguno de los datos no es correcto o esta desactualizado.\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}